version: '3'

services:
  face-swap-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: face-swap-api
    restart: unless-stopped
    ports:
      - "8001:8000" # 将容器8000端口映射到主机8001端口
    volumes:
      - ./static:/app/static # 静态文件，包括结果图片
      - ./temp:/app/temp # 临时文件
      - model_cache:/root/.insightface # insightface模型文件持久化
      - gfpgan_cache:/root/.gfpgan # gfpgan模型文件持久化
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/" ]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - TZ=Asia/Shanghai
      - PYTHONUNBUFFERED=1 # 确保Python输出不被缓存
      - HOST_PORT=8001 # 在环境变量中设置主机端口，与上面的端口映射保持一致
    deploy:
      resources:
        limits:
          cpus: '2' # 限制CPU使用
          memory: 4G # 限制内存使用
        reservations:
          cpus: '0.5' # 保证最低CPU
          memory: 1G # 保证最低内存
    # 添加启动后的端口提醒消息，动态获取端口号
    command: >
      bash -c "echo ' ================================================================================ 🚀 面部替换与增强API服务已启动! 🌐 API地址: http://localhost:${HOST_PORT} 或 http://服务器IP:${HOST_PORT}

      ⚠️  重要提醒: 确保您的防火墙或云服务商安全组已开放${HOST_PORT}端口!

      📋 API文档: http://localhost:${HOST_PORT}/docs 或 http://服务器IP:${HOST_PORT}/docs ================================================================================ ' && uvicorn main:app --host 0.0.0.0 --port 8000"

volumes:
  model_cache:
    # insightface模型文件持久化卷
    driver: local
  gfpgan_cache:
    # gfpgan模型文件持久化卷
    driver: local
